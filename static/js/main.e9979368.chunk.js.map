{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Layout/Layout.module.css","components/FormPhone/FormPhone.module.css","components/Layout/Layout.js","components/Section/Section.js","components/FormPhone/FormPhone.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Layout","children","className","s","container","Section","title","section","FormPhone","addContactPhone","useState","name","setName","number","setNumber","handleInputChange","e","target","value","form","onSubmit","preventDefault","Number","isNaN","alert","type","onChange","Filter","onChangeFilter","filter","ContactList","contacts","onDeleteContact","contactList","map","id","btn","onClick","length","reverse","App","setContacts","setFilter","visibleContacts","contact","toLowerCase","includes","find","uuidv4","prevState","contactID","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,OAAS,4BAA4B,IAAM,2B,iBCAtGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,UAAY,4B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,0B,+ICKVC,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCQxBI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACGD,GAAS,oBAAIJ,UAAWC,IAAEG,MAAjB,SAAyBA,IAClCL,M,iBC+DQO,EAlEG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,OAEbF,mBAAS,IAFI,mBAElCG,EAFkC,KAE1BC,EAF0B,KAsBnCC,EAAoB,SAAAC,GAAM,IAAD,EACLA,EAAEC,OAAlBN,EADqB,EACrBA,KAAMO,EADe,EACfA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAMN,OACE,uBAAMhB,UAAWC,IAAEgB,KAAMC,SAtCN,SAAAJ,GACnBA,EAAEK,iBAEGV,GAASE,EAKVS,OAAOC,OAAOV,GAChBW,MAAM,gQAIRf,EAAgBE,EAAME,GACtBD,EAAQ,IACRE,EAAU,KAXRU,MAAM,kLAkCR,UACE,yCAEE,uBACEC,KAAK,OACLd,KAAK,OACLO,MAAOP,EACPe,SAAUX,OAGd,2CAEE,uBACEJ,KAAK,SACLc,KAAK,MACLP,MAAOL,EACPa,SAAUX,OAGd,wBAAQU,KAAK,SAAb,6B,gBC9DAE,EAAS,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOU,EAAqB,EAArBA,eACvB,OACE,qBAAK1B,UAAWC,IAAE0B,OAAlB,SACE,0DAEE,uBACEJ,KAAK,OACLP,MAAOA,EACPQ,SAAU,SAAAV,GAAC,OAAIY,EAAeZ,EAAEC,OAAOC,gBAyClCY,EAlCK,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,SAAUF,EAA8C,EAA9CA,OAAQD,EAAsC,EAAtCA,eAAgBI,EAAsB,EAAtBA,gBACjDC,EAAcF,EAASG,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIxB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC5C,OACE,+BACGF,EADH,KACWE,EACT,wBACEX,UAAWC,IAAEiC,IACbX,KAAK,SACLY,QAAS,kBAAML,EAAgBG,IAC/B7B,MAAM,SAJR,sBAFO6B,MAcb,OACE,sBAAKjC,UAAWC,IAAE4B,SAAlB,UACKA,EAASO,OACV,cAAC,EAAD,CAAQpB,MAAOW,EAAQD,eAAgBA,IAEvC,gCACE,sJAA0BC,EAA1B,6HACA,wBAAQJ,KAAK,SAASY,QAAS,kBAAMT,EAAe,KAApD,mHAKJ,6BAAKK,EAAYM,gB,QCmBRC,G,MAvDH,WAAO,IAAD,EACgB9B,mBAAS,IADzB,mBACTqB,EADS,KACCU,EADD,OAEY/B,mBAAS,IAFrB,mBAETmB,EAFS,KAEDa,EAFC,KAiCVC,EALGZ,EAASF,QAAO,SAAAe,GAAO,OAC5BA,EAAQjC,KAAKkC,cAAcC,SAASjB,MAMxC,OACE,eAAC,EAAD,WACE,8CACA,cAAC,EAAD,CAASvB,MAAM,YAAf,SACE,cAAC,EAAD,CAAWG,gBAnCO,SAACE,EAAME,GAC7B,GAAIkB,EAASgB,MAAK,SAAAH,GAAO,OAAIA,EAAQjC,OAASA,KAC5Ca,MAAM,GAAD,OAAIb,EAAJ,uLADP,CAKA,IAAMiC,EAAU,CACdT,GAAIa,cACJrC,OACAE,UAGF4B,GAAY,SAAAQ,GAAS,4BAAQA,GAAR,CAAmBL,eAyBnCb,EAASO,QACV,cAAC,EAAD,CAAShC,MAAM,WAAf,SACE,cAAC,EAAD,CACEyB,SAAUY,EACVd,OAAQA,EACRD,eAvBW,SAAAC,GACnBa,EAAUb,IAuBFG,gBA5BY,SAAAkB,GACpBT,EAAYV,EAASF,QAAO,qBAAGM,KAAgBe,gB,MC1BnDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e9979368.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1nn7S\",\"filter\":\"ContactList_filter__3W9VG\",\"btn\":\"ContactList_btn__Tu-M0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__231eY\",\"title\":\"Section_title__Tp1YI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1X-2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormPhone_form__1-hLw\"};","import s from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport s from './FormPhone.module.css';\n\nconst FormPhone = ({ addContactPhone }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name || !number) {\n      alert('Вы не ввели все контактные данные');\n      return;\n    }\n\n    if (Number.isNaN(+number)) {\n      alert('Телефонный номер должен содержать только цифры');\n      return;\n    }\n\n    addContactPhone(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n\n    // this.setState({ [name]: value });\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          name=\"number\"\n          type=\"tel\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default FormPhone;\n","import s from './ContactList.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst ContactList = ({ contacts, filter, onChangeFilter, onDeleteContact }) => {\n  const contactList = contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        {name}: {number}\n        <button\n          className={s.btn}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n          title=\"delete\"\n        >\n          х\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className={s.contacts}>\n      {!!contacts.length ? (\n        <Filter value={filter} onChangeFilter={onChangeFilter} />\n      ) : (\n        <div>\n          <p>Запрашиваемых данных \"{filter}\" нет в списке контактов</p>\n          <button type=\"button\" onClick={() => onChangeFilter('')}>\n            Вернуться к списку\n          </button>\n        </div>\n      )}\n      <ul>{contactList.reverse()}</ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport Layout from './Layout/Layout';\nimport Section from './Section/Section';\nimport FormPhone from './FormPhone/FormPhone';\nimport ContactList from './ContactList/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const addContactPhone = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} уже есть в списке ваших контактов`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(prevState => [...prevState, contact]);\n  };\n\n  const deleteContact = contactID => {\n    setContacts(contacts.filter(({ id }) => id !== contactID));\n  };\n\n  const changeFilter = filter => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Layout>\n      <h1>Home Work #4</h1>\n      <Section title=\"Phonebook\">\n        <FormPhone addContactPhone={addContactPhone} />\n      </Section>\n      {!!contacts.length && (\n        <Section title=\"Contacts\">\n          <ContactList\n            contacts={visibleContacts}\n            filter={filter}\n            onChangeFilter={changeFilter}\n            onDeleteContact={deleteContact}\n          />\n        </Section>\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}